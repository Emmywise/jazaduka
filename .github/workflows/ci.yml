name: CI/CD

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1
  USE_S3: False

on:
  pull_request:
    branches: [ "master", "staging" ]
    paths-ignore: [ "docs/**" ]

  push:
    branches: [ "master", "staging" ]
    paths-ignore: [ "docs/**" ]


jobs:
  linter:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      # Run all pre-commit hooks on all the files.
      # Getting only staged files can be tricky in case a new PR is opened
      # since the action is run on a branch in detached head state
      - name: Install and Run Pre-commit
        uses: pre-commit/action@v2.0.3

  # With no caching at all the entire ci process takes 4m 30s to complete!
  pytest:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v3

      - name: Build the Stack
        run:  docker-compose -f local.yml build

      - name: Run DB Migrations
        run:  docker-compose -f local.yml run --rm django python manage.py migrate

      - name: Run Django Tests
        run:  docker-compose -f local.yml run django pytest

      - name: Tear down the Stack
        run:  docker-compose -f local.yml down


  deploy-staging:
    runs-on: ubuntu-latest
    needs: [pytest]
    if: github.ref == 'refs/heads/staging'
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Define the build number
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: compose/production/django/Dockerfile
          push: true
          tags: kashaglobal/jazaduka:${{ steps.vars.outputs.sha_short }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - uses: actions/checkout@v3
      - name: create vault password file
        run: echo ${{ secrets.VAULT_PASSWD }} > .vault_password
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: set up python
        uses: actions/setup-python@v3
        with:
          python-version: 3.6
      - name: upgrade pip
        run: pip install --upgrade pip
      - name: grant SSH access
        run: devops/grant_ssh_access.sh
      - name: push new code with ansible
        run: make deploy-staging
      - name: revoke SSH access
        if: ${{ always() }}
        run: devops/revoke_ssh_access.sh

  deploy-prod:
    runs-on: ubuntu-latest
    needs: [ pytest ]
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Define the build number
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: compose/production/django/Dockerfile
          push: true
          tags: kashaglobal/jazaduka:${{ steps.vars.outputs.sha_short }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      - uses: actions/checkout@v3
      - name: create vault password file
        run: echo ${{ secrets.VAULT_PASSWD }} > .vault_password
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: set up python
        uses: actions/setup-python@v3
        with:
          python-version: 3.6
      - name: upgrade pip
        run: pip install --upgrade pip
      - name: grant SSH access
        run: devops/grant_ssh_access.sh
      - name: push new code with ansible
        run: make deploy-prod
      - name: revoke SSH access
        if: ${{ always() }}
        run: devops/revoke_ssh_access.sh


